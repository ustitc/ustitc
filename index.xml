<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DevБлог Устица</title><link>https://blog.ustits.dev/</link><description>DevБлог Устица</description><generator>Hugo -- gohugo.io</generator><language>ru</language><lastBuildDate>Tue, 15 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.ustits.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Доморощенный мониторинг</title><link>https://blog.ustits.dev/posts/own-monitoring/</link><pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate><guid>https://blog.ustits.dev/posts/own-monitoring/</guid><description>&lt;p>О том как собирал мониторинговую инфраструктуру.&lt;/p>
&lt;p>Чего хотел:&lt;/p>
&lt;ul>
&lt;li>мониторить сервисы, инфраструктуру, доступность api/сайта&lt;/li>
&lt;li>смотреть с телефона&lt;/li>
&lt;li>ошибки прилетали в Telegram&lt;/li>
&lt;/ul>
&lt;p>Очевидным показался выбор SaaS-ов (&lt;a href="https://www.datadoghq.com">Datadog&lt;/a>, &lt;a href="https://www.dynatrace.com">Dynatrace&lt;/a>, &lt;a href="https://newrelic.com">New Relic&lt;/a>). У них есть бесплатные варианты, но не хотелось следить за квотами, а потом платить деньги за случайно включенный debug на сервисе (словил флешбеки при использовании Amazon RDS). Хотелось, чтобы цена ошибки была минимальной. Из этого появилось новое требование:&lt;/p>
&lt;ul>
&lt;li>влезало на минимальный сервер &lt;a href="https://www.linode.com">Linode&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Остался опенсорс, для простого приключения взял то с чем уже был опыт и у чего больше всего звёздочек в гитхабе. Получилось так:&lt;/p>
&lt;ul>
&lt;li>Prometheus&lt;/li>
&lt;li>Loki&lt;/li>
&lt;li>Grafana&lt;/li>
&lt;li>Exporters&lt;/li>
&lt;li>Promtail&lt;/li>
&lt;/ul>
&lt;h2 id="как-собирать">Как собирать&lt;/h2>
&lt;p>&lt;a href="https://prometheus.io/docs/instrumenting/exporters/">Prometheus exporters&lt;/a> - то, что будет собирать метрики и представлять в виде http эндпоинтов. Можно подобрать из &lt;a href="https://prometheus.io/docs/instrumenting/exporters/">большого списка&lt;/a>. Какие использовал:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/nginxinc/nginx-prometheus-exporter">nginx_exporter&lt;/a> - проверяет жив ли nginx и какая на нем нагрузка&lt;/li>
&lt;li>&lt;a href="https://github.com/prometheus/blackbox_exporter">blackbox_exporter&lt;/a> - ходит на указанные хосты, проверяет что они живы и их ssl сертификаты&lt;/li>
&lt;li>&lt;a href="https://github.com/prometheus/node_exporter">node_exporter&lt;/a> - метрики операционной системы&lt;/li>
&lt;/ul>
&lt;p>Также метрики можно отдавать напрямую с разработанных сервисов в формате prometheus. Для этого есть &lt;a href="https://prometheus.io/docs/instrumenting/clientlibs/">prometheus библиотеки&lt;/a> или, если хочется гибкости, &lt;a href="https://micrometer.io/docs">фасады&lt;/a> которые абстрагируются от потребителя метрик, т.е. можно потом хоть в вышеупомянутые SaaS-ы загонять их.&lt;/p>
&lt;p>Для логов взял &lt;a href="https://grafana.com/docs/loki/latest/clients/promtail/">Promtail&lt;/a>, которому достаточно передать список файлов, за которыми надо следить.&lt;/p>
&lt;h2 id="как-хранить">Как хранить&lt;/h2>
&lt;p>&lt;a href="https://prometheus.io">Prometheus&lt;/a> - БД метрик. По http ходит в экспортеры и сохраняет слепок метрик в привязке к текущему времени. По умолчанию хранит рядом с собой, но можно на &lt;a href="https://prometheus.io/docs/operating/integrations/#remote-endpoints-and-storage">выделенных хранилищах&lt;/a> таких как InfluxDB, или, если вы большой дядька, Kafka.&lt;/p>
&lt;p>&lt;img src="images/metric_schema.png" alt="Deployment схема метрик">&lt;/p>
&lt;p>С логами схема обратная. Promtail собирает логи и отправляет их в &lt;a href="https://grafana.com/oss/loki/">Loki&lt;/a>, который выступает в качестве БД. Также как и прометей может делегировать хранение в другие хранилища, например Cassandra или AWS S3.&lt;/p>
&lt;p>Чтобы не забивать диски настроил &lt;a href="https://grafana.com/docs/loki/latest/operations/storage/table-manager/">table manager&lt;/a> подчищать логи каждые 7 дней.&lt;/p>
&lt;p>&lt;img src="images/logging_schema.png" alt="Deployment схема логирования">&lt;/p>
&lt;h2 id="как-визуализировать">Как визуализировать&lt;/h2>
&lt;p>Для красивых графиков (дашбордов) взял &lt;a href="https://grafana.com">Grafana&lt;/a>, т.к. она отлично из коробки умеет работать как с Prometheus, так и с Loki. Приятно, что большая часть дашбордов уже готовы, не надо собирать самому. Например, дашборды &lt;a href="https://grafana.com/grafana/dashboards/1860">сервера&lt;/a>, &lt;a href="https://grafana.com/grafana/dashboards/4701">JVM&lt;/a> и &lt;a href="https://grafana.com/grafana/dashboards/13407">Loki&lt;/a>.&lt;/p>
&lt;p>&lt;img src="images/web_metrics.png" alt="Просмотр метрик с браузера">&lt;/p>
&lt;p>С мобилки тоже работает:&lt;/p>
&lt;p>&lt;img src="images/mobile_logs.jpeg" alt="Просмотр логов с мобилки">&lt;/p>
&lt;p>&lt;img src="images/mobile_metrics.png" alt="Просмотр метрик с мобилки">&lt;/p>
&lt;h2 id="как-не-проспать-катастрофу">Как не проспать катастрофу&lt;/h2>
&lt;p>В Grafana в web ui набросал alert-ы и присоединил их к &lt;a href="https://gist.github.com/ilap/cb6d512694c3e4f2427f85e4caec8ad7">Telegram-боту&lt;/a>. Просто и удобно.&lt;/p>
&lt;h2 id="что-получилось">Что получилось&lt;/h2>
&lt;p>&lt;img src="images/all_schema.png" alt="Deployment схема мониторинга">&lt;/p>
&lt;p>Grafana, Prometheus и Loki поместились на сервере 1 CPU/1 Gb RAM. Едят мало, на сервере остался хороший запас по ресурсам. Предвижу, что могут быть проблемы при увеличении количества логов и Loki придётся мигрировать на отдельный сервер. С Prometheus и Grafana могут начаться приколы, когда захочется строить графики за большие промежутки времени, но тут достаточно сделать строгие retention политики.&lt;/p>
&lt;p>Если хочется пощупать этот стек, то добрые люди выложили в интернетах &lt;a href="https://github.com/shadinua/demo-grafana-loki-prometheus/blob/master/docker-compose.yml">docker-compose&lt;/a>.&lt;/p></description></item><item><title>Еженедельный обзор № 7</title><link>https://blog.ustits.dev/posts/weekly-7/</link><pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate><guid>https://blog.ustits.dev/posts/weekly-7/</guid><description>&lt;p>&lt;strong>&lt;a href="https://www.quastor.org/p/how-whatsapp-scaled-to-1-billion">[Статья] How WhatsApp scaled to 1 billion users with only 50 engineers&lt;/a>&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>Инженерная культура WhatsApp состоит из 3 принципов&lt;/p>
&lt;ul>
&lt;li>Меньше&lt;/li>
&lt;li>Проще&lt;/li>
&lt;li>Сосредоточенность на миссии&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>С точки зрения разработки интересны первые два. Первый, когда свою работу пытаемся решить увеличением количества &lt;a href="https://devrant.com/rants/627533/what-one-programmer-can-do-in-one-month-two-programmers-can-do-in-two-months-fre">людей&lt;/a> или &lt;a href="https://endler.dev/2019/maybe-you-dont-need-kubernetes/">серверов&lt;/a>. Второй любят спрашивать на &lt;a href="https://ru.wikipedia.org/wiki/KISS_(%D0%BF%D1%80%D0%B8%D0%BD%D1%86%D0%B8%D0%BF)">собеседованиях&lt;/a>, не использовать в &lt;a href="https://www.fredrikholmqvist.com/pages/why-i-hate-frameworks.html">работе&lt;/a>, а также тесно связана с &lt;a href="https://fredrikholmqvist.com/posts/brooks-wirth-go/">магией (сложными инструментами)&lt;/a>.&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://borretti.me/article/languages-not-ecosystems">[Статья] Languages are not Ecosystems | Fernando Borretti&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Автор делит софтверные проекты на раннюю и позднюю фазы. На первой мы фокусируемся на фреймворках и библиотеках (экосистема), чтобы быстрее решить задачу, на второй мы &amp;ldquo;рефакторим&amp;rdquo; и важнее становится язык как инструмент передачи мысли.&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://github.blog/2015-01-21-how-to-write-the-perfect-pull-request/">[Статья] How to write the perfect pull request&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Гайды github по ведению PR-ов. Из интересного:&lt;/p>
&lt;blockquote>
&lt;p>Помните о негативной предвзятости при онлайн-общении. (Если текст нейтральный, мы предполагаем, что тон будет отрицательным.) Можете ли вы использовать положительный язык, а не нейтральный?&lt;/p>
&lt;/blockquote>
&lt;p>Восприятие наших комментариев зависит от эмоций человека по ту сторону экрана.&lt;/p>
&lt;blockquote>
&lt;p>Используйте emoji, чтобы прояснить тон&lt;/p>
&lt;/blockquote>
&lt;p>Реальность такова, что &lt;a href="https://ru.wikipedia.org/wiki/%D0%98%D0%B4%D0%B5%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0">идеограммы&lt;/a> прочно осели в культуре и людям без них тяжелее нас понять и легче обидеться.&lt;/p></description></item><item><title>Еженедельный обзор № 6</title><link>https://blog.ustits.dev/posts/weekly-6/</link><pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate><guid>https://blog.ustits.dev/posts/weekly-6/</guid><description>&lt;p>&lt;strong>&lt;a href="https://www.fredrikholmqvist.com/pages/why-i-hate-frameworks.html">[Статья] Why I Hate Frameworks&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Проблема фреймворков расказанная в виде истории о молотке. К чему может привести погоня за унификацией и обобщением&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://scribe.rip/p/what-every-software-engineer-should-know-about-search-27d1df99f80d">[Статья] What every software engineer should know about search&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Инструкция по тому как собрать свою поисковую систему&lt;/p></description></item><item><title>Еженедельный обзор № 5</title><link>https://blog.ustits.dev/posts/weekly-5/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>https://blog.ustits.dev/posts/weekly-5/</guid><description>&lt;p>&lt;strong>&lt;a href="https://blog.scottlogic.com/2021/09/30/Collective-Code-Ownership.html">[Статья] Capitalism, Socialism, and Code Ownership&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Взгляд на проекты с точки зрения экономической теории. Почему в классическом open source лучше работает капитализм, а в коммерческой разработке социализм?&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://github.com/koka-lang/koka">[Инструмент] Koka lang&lt;/a> и &lt;a href="https://www.microsoft.com/en-us/research/wp-content/uploads/2016/08/algeff-tr-2016-v2.pdf">[Статья] Algebraic Effects for Functional Programming&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Концепция алгебраических эффектов реализованная на уровне языка программирования.&lt;/p>
&lt;p>Эффект - нечто, что может случится в вызываемой функции и изменить её ход исполнения. Задача пользователя функции определить, что делать, если эффект случится. Похоже на try/catch конструкцию, но&lt;/p>
&lt;ul>
&lt;li>С возможностью вернуться в место возникновения ошибки&lt;/li>
&lt;li>Можно описывать не только ошибки, но и &lt;a href="https://koka-lang.github.io/koka/doc/book.html#sec-effect-types">другие side-эффекты&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Еженедельный обзор № 4</title><link>https://blog.ustits.dev/posts/weekly-4/</link><pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate><guid>https://blog.ustits.dev/posts/weekly-4/</guid><description>&lt;p>&lt;strong>&lt;a href="https://scattered-thoughts.net/writing/things-unlearned/">[Статья] Things unlearned&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Разбор мифов разработки. Почему советы бывалых разработчиков надо принимать с долей скептицизма и идти своим путём в формировании опыта. К примеру, рассуждения о ФП перекликаются с мыслями из &lt;a href="https://blog.ustits.dev/posts/weekly-1/">обзора № 1&lt;/a>. Хочешь быть лучше - не слушай, а практикуй. Много&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://www.yegor256.com/2016/09/20/oop-without-classes.html">[Статья] OOP Without Classes?&lt;/a> и &lt;a href="https://www.yegor256.com/2020/12/01/abstract-objects.html">[Статья] Abstract Objects&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Возможно ООП без классов и если да, то как это может выглядеть?&lt;/p></description></item><item><title>Еженедельный обзор № 3</title><link>https://blog.ustits.dev/posts/weekly-3/</link><pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate><guid>https://blog.ustits.dev/posts/weekly-3/</guid><description>&lt;p>&lt;strong>&lt;a href="https://www.cbui.dev/how-to-rapidly-improve-at-any-programming-language/">[Статья] How To Rapidly Improve At Any Programming Language&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Pull request - медиум для передачи опыта между разработчиками. Как получить этот опыт, если ты их не делаешь? Читать чужие.&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://github.com/crev-dev/cargo-crev">[Проект] Crev&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Crev - язык и подход для оценки кода. Code review, которые хранятся в git репозитории. Можно оставить оценку коду, либо почитать, что пишут остальные про библиотеку, которую хочешь затянуть в проект. Должно быть полезно в экосистемах в которых разработчик полагается на маленькие библиотеки (clojure, haskell).&lt;/p></description></item><item><title>Еженедельный обзор № 2</title><link>https://blog.ustits.dev/posts/weekly-2/</link><pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate><guid>https://blog.ustits.dev/posts/weekly-2/</guid><description>&lt;p>&lt;strong>&lt;a href="https://www.youtube.com/watch?v=SisRFSKI4iI">[Видео] SSD 1/16: README vs. IEEE | Егор Бугаенко&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Первая лекция из серии про разработку ПО. Про важность документирования архитектуры.&lt;/p>
&lt;blockquote>
&lt;p>Если я тебя не понимаю, то это твоя вина.&lt;/p>
&lt;/blockquote>
&lt;p>Наши документы должны содержать достаточный контекст, чтобы его мог понять любой специалист.&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://blog.frankel.ch/metrics/">[Статья] On metrics | Nicolas Fränkel&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Предупреждение для разработчиков, чтобы они были аккуратны в выборе метрик. Плохие - не принесут пользы, хорошие - станут самоцелью.&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://habr.com/ru/post/577440/">[Статья] Коммерческая разработка&lt;/a>&lt;/strong>&lt;/p>
&lt;p>То что мы кодим для себя дома не равно тому, что мы делаем на работе. В первом случае нас двигает любопытство, во втором нас толкают деньги.&lt;/p></description></item><item><title>Еженедельный обзор № 1</title><link>https://blog.ustits.dev/posts/weekly-1/</link><pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate><guid>https://blog.ustits.dev/posts/weekly-1/</guid><description>&lt;p>&lt;strong>&lt;a href="https://www.youtube.com/watch?v=-VADIcicpcg">[Видео] Object Oriented Programming vs Functional Programming | Dave Farley&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Парадигма разработки - это правила, которые защищают нас от ошибок, но не защищают от плохого кода.&lt;/p>
&lt;blockquote>
&lt;p>Плохой код можно писать в любой парадигме&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Функциональный программисты рассматривают программирование как математику. ОО программисты рассматривают программирование как моделирование&lt;/p>
&lt;/blockquote>
&lt;p>Автор показывает какие плюсы есть у ООП и в рамках обсуждения конкурентности затрагивает пункты из &lt;a href="https://www.reactivemanifesto.org">реактивного манифеста&lt;/a> автором которого является.&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://fredrikholmqvist.com/posts/brooks-wirth-go/">[Статья] Brooks, Wirth and Go&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Автор рассуждает о современной разработке, которая полна магии, т.е. сложными инструментами, которые скрывают за собой сложные проблемы. Почему при наличии более совершенного инструментария мы разучились писать &lt;a href="https://www.youtube.com/watch?v=EY6q5dv_B-o&amp;amp;t=1360s">ОС за 3 недели&lt;/a>?&lt;/p>
&lt;p>В пример приводит Go и как с помощью него снизить количество “магии” вокруг себя.&lt;/p>
&lt;p>&lt;strong>&lt;a href="https://bonsaibrowser.com/">[ПО] Bonsai browser&lt;/a>&lt;/strong>&lt;/p>
&lt;p>Альтернативное видение браузера. Вместо вкладок - группировка по сайтам, вместо &lt;a href="https://help.vivaldi.com/desktop/tabs/tab-stacks/">стека вкладок, как в vivaldi&lt;/a> - workspace-ы и папки внутри них. Такой подход должен быть удобен для исследовательской деятельности, когда требуется группировать и активно пользоваться большим количеством ресурсов.&lt;/p>
&lt;p>&lt;strong>Группирока страниц по сайтам&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://blog.ustits.dev/img/bonsaibrowser1.png" alt="Группирока страниц по сайтам">&lt;/p>
&lt;p>&lt;strong>Workspace-ы&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://blog.ustits.dev/img/bonsaibrowser2.png" alt="Workspace-ы">&lt;/p></description></item><item><title/><link>https://blog.ustits.dev/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.ustits.dev/about/</guid><description>&lt;p>Йо!&lt;/p>
&lt;p>Руслан, пишу бекенды, в основном на Kotlin и Java.&lt;/p></description></item><item><title/><link>https://blog.ustits.dev/projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.ustits.dev/projects/</guid><description>&lt;h2 id="krefty">krefty&lt;/h2>
&lt;p>&lt;a href="https://github.com/ustits/krefty">Github&lt;/a>&lt;/p>
&lt;p>Экспериментальный DSL для &lt;a href="https://en.wikipedia.org/wiki/Refinement_type">Refined типов&lt;/a> на Kotlin.&lt;/p>
&lt;h2 id="dinf">dinf&lt;/h2>
&lt;p>&lt;a href="https://dinf.ustits.dev">Сайт&lt;/a> и &lt;a href="https://github.com/ustits/dinf">Github&lt;/a>&lt;/p>
&lt;p>Инструмент для вдохновения dungeon master-ов и других творческих деятелей путем генерации случайных данных.&lt;/p>
&lt;h2 id="rando">rando&lt;/h2>
&lt;p>&lt;a href="https://rando.ustits.dev">Сайт&lt;/a> и &lt;a href="https://github.com/ustits/rando">Github&lt;/a>&lt;/p>
&lt;p>Todo-шник который позволяет делать только 1 дело за раз.&lt;/p></description></item></channel></rss>